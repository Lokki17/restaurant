<beans:beans xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns="http://www.springframework.org/schema/security"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security.xsd">


    <http create-session="stateless" entry-point-ref="authenticationFailedEntryPoint">
        <custom-filter ref="authenticationFilter" position="BASIC_AUTH_FILTER"/>
        <intercept-url pattern="/users/**" access="hasRole('ROLE_ADMIN')"/>
        <intercept-url pattern="/dishes/**" access="isAuthenticated()"/>
        <intercept-url pattern="/restaurants/**" access="hasRole('ROLE_ADMIN')"/>
        <intercept-url pattern="/votes/**" access="isAuthenticated()"/>
        <intercept-url pattern="/create/" access="permitAll"/>
        <csrf disabled="true"/>
        <logout/>
        <access-denied-handler ref="accessDeniedHandler"/>
    </http>

    <beans:bean id="accessDeniedHandler" class="ru.restaurant.util.exception.AccessDeniedHandlerImpl"/>

    <beans:bean id="authenticationFilter" class="org.springframework.security.web.authentication.www.BasicAuthenticationFilter">
        <beans:constructor-arg name="authenticationManager" ref="authenticationManager" />
        <beans:constructor-arg name="authenticationEntryPoint" ref="authenticationFailedEntryPoint" />
    </beans:bean>

    <beans:bean id="authenticationFailedEntryPoint"
                class="ru.restaurant.util.exception.AuthenticationFailedEntryPoint"/>

    <global-method-security secured-annotations="enabled"/>

    <beans:bean class="ru.restaurant.util.PasswordUtil" id="passwordEncoder" factory-method="getPasswordEncoder"/>

    <authentication-manager alias="authenticationManager">
                <authentication-provider user-service-ref="userService">
                    <password-encoder ref="passwordEncoder"/>
                </authentication-provider>
<!--        <authentication-provider>
            <jdbc-user-service data-source-ref="dataSource"
                               users-by-username-query="SELECT name, password, TRUE FROM users WHERE name = ?"
                               authorities-by-username-query="SELECT u.name, r.role FROM users AS u, user_roles AS r WHERE u.id = r.user_id AND u.name = ?"
            />
&lt;!&ndash;                                    <user-service>
                                        <user name="admin" password="admin" authorities="ROLE_ADMIN"/>
                                        <user name="User1" password="password" authorities="ROLE_USER"/>
                                    </user-service>&ndash;&gt;
        </authentication-provider>-->
    </authentication-manager>

</beans:beans>