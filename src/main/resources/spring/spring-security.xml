<beans:beans xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns="http://www.springframework.org/schema/security"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security.xsd">


    <http auto-config="true">
        <intercept-url pattern="/users/**" access="hasRole('ADMIN')"/>
        <intercept-url pattern="/dishes/**" access="permitAll"/>
        <intercept-url pattern="/restaurants/**" access="hasRole('ADMIN')"/>
        <intercept-url pattern="/voices/**" access="hasRole('ADMIN')"/>
        <csrf disabled="true"/>
        <logout/>
    </http>

    <!--<beans:bean class="ru.restaurant.util.PasswordUtil" id="passwordEncoder" factory-method="getPasswordEncoder"/>-->

    <authentication-manager>
        <!--        <authentication-provider user-service-ref="userService">
                    <password-encoder ref="passwordEncoder"/>
                </authentication-provider>-->
        <authentication-provider>
            <jdbc-user-service data-source-ref="dataSource"
                               users-by-username-query="SELECT name, password, TRUE FROM users WHERE name = ?"
                               authorities-by-username-query="SELECT u.name, r.role FROM users AS u, user_roles AS r WHERE u.id = r.user_id AND u.name = ?"
            />
<!--                                    <user-service>
                                        <user name="admin" password="admin" authorities="ROLE_ADMIN"/>
                                        <user name="User1" password="password" authorities="ROLE_USER"/>
                                    </user-service>-->
        </authentication-provider>
    </authentication-manager>

</beans:beans>